{
  "name": "var-find",
  "description": "Find and return indexes of variable declarations.",
  "version": "0.1.0",
  "homepage": "https://github.com/twolfson/node-var-find",
  "author": {
    "name": "Todd Wolfson",
    "email": "todd@twolfson.com",
    "url": "http://twolfson.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/twolfson/node-var-find.git"
  },
  "bugs": {
    "url": "https://github.com/twolfson/node-var-find/issues"
  },
  "licenses": [
    {
      "type": "UNLICENSE",
      "url": "https://github.com/twolfson/node-var-find/blob/master/UNLICENSE"
    }
  ],
  "main": "lib/var-find",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "falafel": "~0.3.1"
  },
  "devDependencies": {
    "mocha": "~1.11.0",
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-watch": "~0.4.0"
  },
  "keywords": [
    "var",
    "variable",
    "find",
    "declaration"
  ],
  "readme": "# var-find\n\nFind and return indexes of variable declarations.\n\nThis was built to run inside of [twolfson/sublime-js-var-shortcuts][], a [Sublime Text][] plugin to make dealing with adding/removing `vars` easier.\n\n[twolfson/sublime-js-var-shortcuts]: https://github.com/twolfson/sublime-js-var-shortcuts\n[Sublime Text]: http://sublimetext.com/\n\n## Getting Started\nInstall the module with: `npm install var-find`\n\n```javascript\nvar varFind = require('var-find');\nvarFind(function abc() {\n  // Group: `var def = 123;`\n  // Declaration: `def = 123;`\n  var def = 123;\n\n  console.log('hi');\n} + '');\n// [{\n//   \"start\": 78,\n//   \"end\": 92,\n//   \"vars\": [{\n//     \"start\": 82,\n//     \"end\": 91\n//   }]\n// }]\n```\n\n## Documentation\n`varFind` is a function that takes in a JS source code.\n\n```js\nvarFind(script);\n/**\n * varFind parses JS source code and returns locations of variable groups and declarations\n * @param {String} script Source code to parse\n * @returns {Array} groups Collection of variable groups\n * @returns {Object} groups[i] Variable group instance\n * @returns {Number} groups[i].start Beginning index for variable group instance\n * @returns {Number} groups[i].end Finishing index for variable group instance\n * @returns {Array} groups[i].vars Collection of variable declarations\n * @returns {Object} groups[i].vars[i] Variable declaration instance\n * @returns {Number} groups[i].vars[i].start Beginning index for variable declaration instance\n * @returns {Number} groups[i].vars[i].end Finishing index for variable declaration instance\n */\n```\n\n## Examples\nFor visual representation, variable groups begin and end with `[` and `]`; for variable declarations, `{` and `}`.\n\n**Single definition:**\n\n```js\n[var {abc = 123};]\n\nconsole.log('hi');\n```\n\n**Comma-last definition:**\n\n```js\n[var {abc},\n     {def};]\n\nconsole.log('hi');\n```\n\n**Comma-first definition:**\n\n```js\n[var {abc}\n   , {def};]\n\nconsole.log('hi');\n```\n\n**Trailing whitespace (with semicolon):**\n\n> Trailing whitespace without semicolon is considered another statement and ignored.\n\n```js\n[var {abc = 123}   ;]\n\nconsole.log('hi');\n```\n\n## Donating\nSupport this project and [others by twolfson][gittip] via [gittip][].\n\n[![Support via Gittip][gittip-badge]][gittip]\n\n[gittip-badge]: https://rawgithub.com/twolfson/gittip-badge/master/dist/gittip.png\n[gittip]: https://www.gittip.com/twolfson/\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint via [grunt](https://github.com/gruntjs/grunt) and test via `npm test`.\n\n## Unlicense\nAs of Sep 27 2013, Todd Wolfson has released this repository and its contents to the public domain.\n\nIt has been released under the [UNLICENSE][].\n\n[UNLICENSE]: UNLICENSE\n",
  "readmeFilename": "README.md",
  "_id": "var-find@0.1.0",
  "_from": "var-find@~0.1.0"
}
